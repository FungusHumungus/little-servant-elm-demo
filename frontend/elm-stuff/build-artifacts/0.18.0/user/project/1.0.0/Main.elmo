var _user$project$Main$emptyUser = {id: _elm_lang$core$Maybe$Nothing, username: '', age: 0, email: ''};
var _user$project$Main$Model = F2(
	function (a, b) {
		return {users: a, newUser: b};
	});
var _user$project$Main$DeleteUser = function (a) {
	return {ctor: 'DeleteUser', _0: a};
};
var _user$project$Main$userTable = function (users) {
	var userRow = function (user) {
		return A2(
			_elm_lang$html$Html$tr,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$td,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(user.username),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$td,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								_elm_lang$core$Basics$toString(user.age)),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$td,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(user.email),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$td,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: function () {
										var _p0 = user.id;
										if (_p0.ctor === 'Nothing') {
											return _elm_lang$html$Html$text('');
										} else {
											return A2(
												_elm_lang$html$Html$button,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('btn btn-danger'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Events$onClick(
															_user$project$Main$DeleteUser(_p0._0)),
														_1: {ctor: '[]'}
													}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Delete'),
													_1: {ctor: '[]'}
												});
										}
									}(),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			});
	};
	var header = A2(
		_elm_lang$html$Html$tr,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$th,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Name'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$th,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Age'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$th,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Email'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$th,
							{ctor: '[]'},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
	return A2(
		_elm_lang$html$Html$table,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('table table-striped'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: header,
			_1: A2(_elm_lang$core$List$map, userRow, users)
		});
};
var _user$project$Main$SubmitUser = {ctor: 'SubmitUser'};
var _user$project$Main$ChangeEmail = function (a) {
	return {ctor: 'ChangeEmail', _0: a};
};
var _user$project$Main$ChangeAge = function (a) {
	return {ctor: 'ChangeAge', _0: a};
};
var _user$project$Main$ChangeUsername = function (a) {
	return {ctor: 'ChangeUsername', _0: a};
};
var _user$project$Main$newUserForm = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('w-50'),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('form-group'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$label,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Username'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('form-control'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$ChangeUsername),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('form-group'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$label,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Age'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('form-control'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$ChangeAge),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('form-group'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$label,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Email'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('form-control'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$ChangeEmail),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('btn btn-success'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$SubmitUser),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Submit'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('An amazing Servant Elm demo'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _user$project$Main$userTable(model.users),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h2,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('New user'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _user$project$Main$newUserForm,
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$DeletedUser = F2(
	function (a, b) {
		return {ctor: 'DeletedUser', _0: a, _1: b};
	});
var _user$project$Main$deleteUser = function (id) {
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Main$DeletedUser(id),
		_user$project$Generated_Api$deleteUsersByUserId(id));
};
var _user$project$Main$AddUser = function (a) {
	return {ctor: 'AddUser', _0: a};
};
var _user$project$Main$submitUser = function (user) {
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Main$AddUser,
		_user$project$Generated_Api$postUsers(user));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'SetUsers':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							users: A2(_elm_lang$core$Result$withDefault, model.users, _p1._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SubmitUser':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Main$submitUser(model.newUser)
				};
			case 'AddUser':
				var _p2 = _p1._0;
				if (_p2.ctor === 'Ok') {
					var users = {ctor: '::', _0: _p2._0, _1: model.users};
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{users: users}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'DeleteUser':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Main$deleteUser(_p1._0)
				};
			case 'DeletedUser':
				var _p3 = _p1._1;
				if (_p3.ctor === 'Ok') {
					var users = A2(
						_elm_lang$core$List$filter,
						function (u) {
							return !_elm_lang$core$Native_Utils.eq(
								u.id,
								_elm_lang$core$Maybe$Just(_p1._0));
						},
						model.users);
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{users: users}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'ChangeUsername':
				var $new = model.newUser;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							newUser: _elm_lang$core$Native_Utils.update(
								$new,
								{username: _p1._0})
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ChangeAge':
				var $new = model.newUser;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							newUser: _elm_lang$core$Native_Utils.update(
								$new,
								{
									age: A2(
										_elm_lang$core$Maybe$withDefault,
										0,
										_elm_lang$core$Result$toMaybe(
											_elm_lang$core$String$toInt(_p1._0)))
								})
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				var $new = model.newUser;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							newUser: _elm_lang$core$Native_Utils.update(
								$new,
								{email: _p1._0})
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$SetUsers = function (a) {
	return {ctor: 'SetUsers', _0: a};
};
var _user$project$Main$fetchUsers = A2(_elm_lang$http$Http$send, _user$project$Main$SetUsers, _user$project$Generated_Api$getUsers);
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {
		users: {ctor: '[]'},
		newUser: _user$project$Main$emptyUser
	},
	_1: _user$project$Main$fetchUsers
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Main$init,
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (_p4) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
