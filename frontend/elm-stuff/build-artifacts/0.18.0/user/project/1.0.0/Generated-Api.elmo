var _user$project$Generated_Api$encodeUser = function (x) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'name',
				_1: _elm_lang$core$Json_Encode$string(x.name)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'age',
					_1: _elm_lang$core$Json_Encode$int(x.age)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'email',
						_1: _elm_lang$core$Json_Encode$string(x.email)
					},
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Generated_Api$User = F3(
	function (a, b, c) {
		return {name: a, age: b, email: c};
	});
var _user$project$Generated_Api$decodeUser = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'email',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'age',
		_elm_lang$core$Json_Decode$int,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'name',
			_elm_lang$core$Json_Decode$string,
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Generated_Api$User))));
var _user$project$Generated_Api$getUsers = _elm_lang$http$Http$request(
	{
		method: 'GET',
		headers: {ctor: '[]'},
		url: A2(
			_elm_lang$core$String$join,
			'/',
			{
				ctor: '::',
				_0: 'http://localhost:8000/api',
				_1: {
					ctor: '::',
					_0: 'users',
					_1: {ctor: '[]'}
				}
			}),
		body: _elm_lang$http$Http$emptyBody,
		expect: _elm_lang$http$Http$expectJson(
			_elm_lang$core$Json_Decode$list(_user$project$Generated_Api$decodeUser)),
		timeout: _elm_lang$core$Maybe$Nothing,
		withCredentials: false
	});
